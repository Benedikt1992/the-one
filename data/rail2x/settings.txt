#
# Default settings for the rail2x simulation
#

## Scenario settings
Scenario.name = rail2x-M_%%Group1.movementModel%%-D_%%Group1.delayModel%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.5
# 1 simulated second will be 1 minute in the schedule
Scenario.endTime = 10558

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Long Range" interface for trains and stations
longRange.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
longRange.transmitSpeed = 250k
# ~200m
longRange.transmitRange = 100

# "Short Range" interface for switches
shortRange.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
shortRange.transmitSpeed = 250k
# ~100m
shortRange.transmitRange = 50

# Define 6 different node groups
Scenario.nrofHostGroups = 3

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.router = EpidemicRouter
# make sure to not loose messages in trains and stations
Group.bufferSize = 5G
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = longRange
# Message TTL same as simulation time to not lose any packages
Group.msgTtl = 10558

Group1.groupID = train
Group1.nrofHosts = 295
Group1.nrofInterfaces = 2
Group1.interface2 = shortRange
Group1.movementModel = MapScheduledMovement
Group1.delayModel = FollowUpDelay
Group1.delayRange = -10,10
# average delayProbability of 2019 of DB
Group1.delayProbability = 0.201
Group1.routeFile = data/rail2x/ICE-germany-routes.txt

Group2.groupID = station
Group2.nrofHosts = 171
Group2.movementModel = StationaryListMovement
Group2.nodeLocationsFile = data/rail2x/ICE-germany-stations.wkt

Group3.groupID = switch
Group3.nrofHosts = 446
Group3.movementModel = StationaryListMovement
Group3.nodeLocationsFile = data/rail2x/ICE-germany-switches.wkt
# switches are more limited (shorter range and smaller buffer)
Group3.interface1 = shortRange
Group3.bufferSize = 100M
Group3.mtaPolicy = SendOnlyPolicy


## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageBurstGenerator
# minimal message size. for faster simulation (long message queues). But reduces accuracy of simulation
Events1.size = 1
Events1.interval = 1
Events1.hosts = 466, 912
#Events1.tohosts = 295, 466
Events1.tohosts = 295, 296
Events1.time = 0,1
Events1.prefix = M

# only receive messages which belong to this node itself
SendOnlyPolicy.toReceivePolicy = -1

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 900000, 680000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 10

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 1
# this map is scaled down to 1:2 (meters)
MapBasedMovement.mapFile1 = data/rail2x/ICE-germany-extended.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 6
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageCopyCountReport
Report.report2 = CreatedMessagesReport
Report.report3 = DeliveredMessagesReport
MessageCopyCountReport.granularity = 100
Report.report4 = MessageSnapshotReport
# all trains
MessageSnapshotReport.nodeRanges = 0-294
MessageSnapshotReport.granularity = 100
Report.report5 = MessageProcessingReport
# all trains and stations
MessageProcessingReport.nodeRanges = 0-465
MessageProcessingReport.startedOnly = true
Report.report6 = MessageDuplicatesReport
MessageDuplicatesReport.nodeRanges = 0-465

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
# cellSizeMult lower values speed up simulation on cost of memory and startup time (lowest is 1)
Optimization.cellSizeMult = 60
Optimization.randomizeUpdateOrder = true


## GUI settings
# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 30
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$

Settings.output = reports/settings.txt
